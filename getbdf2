import subprocess

def read_header(bus):
    try:
        bridge_control_output = subprocess.check_output(["setpci", "-s", bus, "0e.w"])
        print(f"Bridge Control for {bus}: {bridge_control_output.decode().strip()}")
    except subprocess.CalledProcessError:
        print(f"Error reading Bridge Control for {bus}.")


def execute_shell_command(command):
    try:
        # Execute the shell command
        result = subprocess.run(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        if result.returncode == 0:
            # Successful execution
            return result.stdout.decode("utf-8").strip()  # Decode bytes to string
        else:
            # Error occurredhttps://github.com/manunicholasjacob/Testing/blob/main/getbdf2
            return f"Error: {result.stderr.decode('utf-8').strip()}"  # Decode bytes to string
    except Exception as e:
        return f"Error: {str(e)}"

# Execute the given shell command
command_output = execute_shell_command("lspci | cut -d ' ' -f 1")

# Print the output
print(command_output)

split_numbers = command_output.split('\n')
split_numbers = [num for num in split_numbers if num]

# Print the resulting list
print(split_numbers)

for i in range(len(split_numbers)):
    read_header(split_numbers[i])
